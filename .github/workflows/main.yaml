name: Deploy to AWS via SST

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            .next
            .open-next
          key: |
            cache-${{ hashFiles('package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            cache-${{ hashFiles('package-lock.json') }}-

      - name: Install dependencies
        run: npm install

      - name: Install AWS credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{secrets.AWS_ACCESS_KEY_ID}}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{secrets.AWS_SECRET_ACCESS_KEY}}" >> ~/.aws/credentials

      # - name: Set SST secrets
      #   run: |
      #     npx sst secret set PRISMA_CONNECT_URL ${{secrets.DATABASE_URL}} --stage production
      #     npx sst secret set DATABASE_URL ${{secrets.DIRECT_DATABASE_URL}} --stage production

      # - name: Migrate Prisma database
      #   run: npx prisma migrate
      #   env:
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #     DIRECT_DATABASE_URL: ${{ secrets.DIRECT_DATABASE_URL }}

      # - name: Deploy to AWS
      # run: npx sst deploy --stage production
      # env:
      #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   AWS_REGION: ${{ secrets.AWS_REGION }}
      #   DATABASE_URL: ${{ secrets.DIRECT_DATABASE_URL }}
      #   PRISMA_CONNECT_URL: ${{ secrets.DATABASE_URL }}
      #   NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      #   CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

      - name: Clean Up AWS Profile
        run: |
          rm -rf ~/.aws
